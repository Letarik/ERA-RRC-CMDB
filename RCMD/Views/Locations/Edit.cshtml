@model RCMD.Models.Location

@{
    ViewBag.Title = "Edit";
}

<div id="regional-sales" class="main-section-content row">
    <div id="topProductsContainer">
        <p>
            <h4 align="right"><a href="@(Url.Action("Index", "Users"))" alt="Home"><i class="material-icons md-18">home</i></a>&nbsp;&nbsp;<a href="@(Url.Action("Index", "Locations"))" alt="List"><i class="material-icons md-18">list</i></a> &nbsp;&nbsp;<a href="@(Url.Action("Create", "Locations"))" alt="Create"><i class="material-icons md-18">create</i></a>&nbsp;&nbsp; <a href="@(Url.Action("Index", "Home"))" align="right"><i class="material-icons md-18">power_settings_new</i></a></h4>
        </p>
        <br />
        @using (Html.BeginForm("Edit", "Locations", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.ID)
            <table class="table table-striped table-bordered table-condensed">
                <tbody>

                    <tr>
                        <td>
                            <div class="container-narrow">
                                <div class="col-md-13">
                                    @Html.EditorFor(model => model.District, new { htmlAttributes = new { @class = "form-control", placeholder = "District", tabindex = 1 } })
                                    @Html.ValidationMessageFor(model => model.District, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </td>
                        <td>
                            <div class="container-narrow">
                                <div class="col-md-13">
                                    @Html.EditorFor(model => model.Road_Section, new { htmlAttributes = new { @class = "form-control", placeholder = "Road Section", tabindex = 1 } })
                                    @Html.ValidationMessageFor(model => model.Road_Section, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </td>
                        <td>
                            <div class="container-narrow">
                                <div class="col-md-13">
                                    @Html.EditorFor(model => model.Quarry_Area, new { htmlAttributes = new { @class = "form-control", placeholder = "Quarry Area", tabindex = 1 } })
                                    @Html.ValidationMessageFor(model => model.Quarry_Area, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </td>
                        <td>
                            <div class="container-narrow">
                                @*@Html.LabelFor(model => model.Change, htmlAttributes: new { @class = "control-label col-md-2" })*@
                                <div class="col-md-13">
                                    @Html.EditorFor(model => model.Change, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Change, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </td>
                        <td>
                            <div class="container-narrow">
                                <div class="col-md-13">
                                    <input type="submit" value="Save" class="btn btn-small btn-primary" style="width:150px; height:35px;"/>
                                </div>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <div class="container-narrow">
                                @*@Html.LabelFor(model => model.Offset_Distance, htmlAttributes: new { @class = "control-label col-md-2" })*@
                                <div class="col-md-13">
                                    @Html.EditorFor(model => model.Offset_Distance, new { htmlAttributes = new { @class = "form-control", placeholder = "Offset Distance", tabindex = 1 } })
                                    @Html.ValidationMessageFor(model => model.Offset_Distance, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </td>
                        <td>
                            <div class="container-narrow">
                                @*@Html.LabelFor(model => model.Latitude, htmlAttributes: new { @class = "control-label col-md-2" })*@
                                <div class="col-md-13">
                                    @Html.EditorFor(model => model.Latitude, new { htmlAttributes = new { @class = "form-control", placeholder = "Latitude", tabindex = 1 } })
                                    @Html.ValidationMessageFor(model => model.Latitude, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </td>
                        <td>

                            <div class="container-narrow">
                                @*@Html.LabelFor(model => model.Longitude, htmlAttributes: new { @class = "control-label col-md-2" })*@
                                <div class="col-md-13">
                                    @Html.EditorFor(model => model.Longitude, new { htmlAttributes = new { @class = "form-control", placeholder = "Longitude", tabindex = 1 } })
                                    @Html.ValidationMessageFor(model => model.Longitude, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </td>
                        <td>
                            <div class="container-narrow">
                                @*@Html.LabelFor(model => model.Elevation, htmlAttributes: new { @class = "control-label col-md-2" })*@
                                <div class="col-md-13">
                                    @Html.EditorFor(model => model.Elevation, new { htmlAttributes = new { @class = "form-control", placeholder = "Elevation", tabindex = 1 } })
                                    @Html.ValidationMessageFor(model => model.Elevation, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </td>
                        <td>
                            <div class="container-narrow">
                                <div class="col-md-13">
                                    <input type="reset" class="btn btn-info" value="Clear" style="width:150px; height:35px;" />
                                </div>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <div class="container-narrow">
                                @*@Html.LabelFor(model => model.Estimated_Quantity, htmlAttributes: new { @class = "control-label col-md-2" })*@
                                <div class="col-md-13">
                                 
                                    <textarea class="form-control" name="Material_Description" placeholder="Material Description" cols="30">@Model.Material_Description</textarea>
                                  
                                </div>
                            </div>
                        </td>
                        <td>
                            <div class="container-narrow">
                                @*@Html.LabelFor(model => model.Photo, htmlAttributes: new { @class = "control-label col-md-2" })*@
                                <div class="col-md-13">
                                   <div id="myDIV" style="display:block;">
                                        <a onclick="myFunction()" alt="Edit Photo" href="#">Edit Photo </a>
                                        <img src="~/Uploads/@Model.Photo" alt="Captured Photo" height="70x" width="120px" />
                                        @Html.EditorFor(model => model.Photo, new { htmlAttributes = new { @class = "form-control", @value= ViewBag.Photo, type = "hidden", placeholder = "Photo", tabindex = 1} })
                                       
                                    </div>
                                   
                                    <div id="fileInput" style="display:none;">
                                        <input class="form-control" type="file" name="postedFile" placeholder="Upload Photo" />
                                        @Html.ValidationMessageFor(model => model.Photo, "", new { @class = "text-danger" })
                                    </div>
                                   
                                 
                                </div>
                            </div>
                        </td>
                        <td></td>
                        <td></td>
                        <td></td>
                    </tr>
                </tbody>
            </table>

        }

        </div>
    </div>
<script>
function myFunction() {
    var x = document.getElementById("myDIV");
    var y = document.getElementById("fileInput");
    if (x.style.display === "none") {
        x.style.display = "block";
        y.style.display = "none";
    }
    else 
    {
        x.style.display = "none";
        y.style.display = "block";
    }
    
}
</script>