


@model RCMD.Models.Penetration_Test_Data

@{
    ViewBag.Title = "Edit";
}



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()



    <div class="form-horizontal">
        <h4>Edit Penetration Test Data Detail | @Html.ActionLink("Penetration Test Data List", "Index") | @Html.ActionLink("Create New Penetration Test Data", "Create")</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)
        <table class="table table-striped table-bordered table-condensed">
            <tbody>

                <tr>
                    <td>
                        <div class="container-narrow">
                            <div class="col-md-13">
                                @Html.EditorFor(model => model.Ring_Factor, new { htmlAttributes = new { @class = "form-control", placeholder = "Ring Factor", tabindex = 1 } })
                                @Html.ValidationMessageFor(model => model.Ring_Factor, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </td>
                    <td>
                        <div class="container-narrow">
                            <div class="col-md-13">
                                @Html.EditorFor(model => model.Penetration, new { htmlAttributes = new { @class = "form-control", placeholder = "Penetration", tabindex = 1 } })
                                @Html.ValidationMessageFor(model => model.Penetration, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </td>
                    <td>
                        <div class="container-narrow">
                            <div class="col-md-13">
                                @Html.EditorFor(model => model.No_Of_Blows, new { htmlAttributes = new { @class = "form-control", placeholder = "No Of Blows", tabindex = 1 } })
                                @Html.ValidationMessageFor(model => model.No_Of_Blows, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </td>
                    <td>
                        <div class="container-narrow">
                            @*@Html.LabelFor(model => model.Change, htmlAttributes: new { @class = "control-label col-md-2" })*@
                            <div class="col-md-13">
                                @Html.EditorFor(model => model.Dialrdg, new { htmlAttributes = new { @class = "form-control", placeholder = "Dialrdg", tabindex = 1 } })
                                @Html.ValidationMessageFor(model => model.Dialrdg, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </td>
                    <td>
                        <div class="container-narrow">
                            <div class="col-md-13">
                                <input type="submit" value="Save" class="btn btn-small btn-primary" style="width:150px; height:35px;" />
                            </div>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <div class="container-narrow">
                            @*@Html.LabelFor(model => model.Offset_Distance, htmlAttributes: new { @class = "control-label col-md-2" })*@
                            <div class="col-md-13">
                                @Html.EditorFor(model => model.Penetration_Load, new { htmlAttributes = new { @class = "form-control", placeholder = "Penetration Load", tabindex = 1 } })
                                @Html.ValidationMessageFor(model => model.Penetration_Load, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </td>
                    <td>
                        <div class="container-narrow">
                            @*@Html.LabelFor(model => model.Latitude, htmlAttributes: new { @class = "control-label col-md-2" })*@
                            <div class="col-md-13">
                                @Html.EditorFor(model => model.Cor_Load, new { htmlAttributes = new { @class = "form-control", placeholder = "Cor Load", tabindex = 1 } })
                                @Html.ValidationMessageFor(model => model.Cor_Load, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </td>
                    <td>

                        <div class="container-narrow">
                            @*@Html.LabelFor(model => model.Longitude, htmlAttributes: new { @class = "control-label col-md-2" })*@
                            <div class="col-md-13">
                                @Html.EditorFor(model => model.CBR, new { htmlAttributes = new { @class = "form-control", placeholder = "CBR", tabindex = 1 } })
                                @Html.ValidationMessageFor(model => model.CBR, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </td>
                    <td>
                        <div class="container-narrow">
                            @*@Html.LabelFor(model => model.Elevation, htmlAttributes: new { @class = "control-label col-md-2" })*@
                            <div class="col-md-13">
                                @Html.EditorFor(model => model.RDG_Before_Soaking, new { htmlAttributes = new { @class = "form-control", placeholder = "RDG Before Soaking", tabindex = 1 } })
                                @Html.ValidationMessageFor(model => model.RDG_Before_Soaking, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </td>
                    <td>
                        <div class="container-narrow">
                            <div class="col-md-13">
                                <input type="reset" class="btn btn-info" value="Clear" style="width:150px; height:35px;" />
                            </div>
                        </div>
                    </td>

                </tr>
                <tr>
                    <td>
                        <div class="container-narrow">
                            @*@Html.LabelFor(model => model.Estimated_Quantity, htmlAttributes: new { @class = "control-label col-md-2" })*@
                            <div class="col-md-13">
                                @Html.EditorFor(model => model.RDG_After_Soaking, new { htmlAttributes = new { @class = "form-control", placeholder = "RDG After Soaking", tabindex = 1 } })
                                @Html.ValidationMessageFor(model => model.RDG_After_Soaking, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </td>
                    <td>
                        <div class="container-narrow">
                            @*@Html.LabelFor(model => model.Photo, htmlAttributes: new { @class = "control-label col-md-2" })*@
                            <div class="col-md-13">
                                @Html.EditorFor(model => model.Percent_Swell, new { htmlAttributes = new { @class = "form-control", placeholder = "Percent Swell", tabindex = 1 } })
                                @Html.ValidationMessageFor(model => model.Percent_Swell, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </td>
                    <td>
                        <div class="container-narrow">
                            @*@Html.LabelFor(model => model.Photo, htmlAttributes: new { @class = "control-label col-md-2" })*@
                            <div class="col-md-13">
                                @Html.EditorFor(model => model.Average_Percent_Swell, new { htmlAttributes = new { @class = "form-control", placeholder = "Average Percent Swell", tabindex = 1 } })
                                @Html.ValidationMessageFor(model => model.Average_Percent_Swell, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </td>
                    <td>
                        <div class="container-narrow">
                            @*@Html.LabelFor(model => model.Photo, htmlAttributes: new { @class = "control-label col-md-2" })*@
                            <div class="col-md-13">
                                @Html.EditorFor(model => model.Unit, new { htmlAttributes = new { @class = "form-control", placeholder = "Unit", tabindex = 1 } })
                                @Html.ValidationMessageFor(model => model.Unit, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </td>
                    <td></td>
                </tr>
                <tr>
                    <td>
                        <div class="container-narrow">
                            @*@Html.LabelFor(model => model.Estimated_Quantity, htmlAttributes: new { @class = "control-label col-md-2" })*@
                            <div class="col-md-13">
                                @Html.EditorFor(model => model.Blow_No, new { htmlAttributes = new { @class = "form-control", placeholder = "Blow No", tabindex = 1 } })
                                @Html.ValidationMessageFor(model => model.Blow_No, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </td>
                    <td>
                        <div class="container-narrow">
                            @*@Html.LabelFor(model => model.Estimated_Quantity, htmlAttributes: new { @class = "control-label col-md-2" })*@
                            <div class="col-md-13">
                                @Html.DropDownList("Material_Description_ID", null, htmlAttributes: new { @class = "form-control", placeholder = "Material Description ID", tabindex = 1 })
                                @Html.ValidationMessageFor(model => model.Material_Description_ID, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </td>
                    <td></td>
                    <td></td>
                    <td></td>
                </tr>
            </tbody>
        </table>
    </div>
}










@*


@model RCMD.Models.Penetration_Test_Data

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Penetration_Test_Data</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            @Html.LabelFor(model => model.Ring_Factor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Ring_Factor, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Ring_Factor, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Penetration, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Penetration, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Penetration, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.No_Of_Blows, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.No_Of_Blows, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.No_Of_Blows, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Dialrdg, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Dialrdg, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Dialrdg, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Penetration_Load, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Penetration_Load, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Penetration_Load, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Cor_Load, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Cor_Load, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Cor_Load, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CBR, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CBR, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CBR, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RDG_Before_Soaking, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RDG_Before_Soaking, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RDG_Before_Soaking, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RDG_After_Soaking, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RDG_After_Soaking, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RDG_After_Soaking, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Percent_Swell, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Percent_Swell, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Percent_Swell, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Average_Percent_Swell, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Average_Percent_Swell, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Average_Percent_Swell, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Unit, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Unit, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Unit, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Blow_No, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Blow_No, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Blow_No, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Material_Description_ID, "Material_Description_ID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Material_Description_ID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Material_Description_ID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
*@