@model RCMD.Models.Determnation_Of_Specific_Gravity_And_Water_Absorption_Of_Fine

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Edit Location Detail | @Html.ActionLink("Determnation Of Specific Gravity And Water Absorption Of Fine List", "Index") | @Html.ActionLink("Create New Determnation Of Specific Gravity And Water Absorption Of Fine", "Create")</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)


        <table class="table table-striped table-bordered table-condensed">
            <tbody>

                <tr>
                    <td>
                        <div class="container-narrow">
                            <div class="col-md-13">
                                @Html.DropDownList("Location_ID", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Location_ID, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </td>
                    <td>
                        <div class="container-narrow">
                            <div class="col-md-13">
                                @Html.EditorFor(model => model.WSASDT, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.WSASDT, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </td>
                    <td>
                        <div class="container-narrow">
                            <div class="col-md-13">
                                @Html.EditorFor(model => model.WSSDAIA, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.WSSDAIA, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </td>
                    <td>
                        <div class="container-narrow">
                            @*@Html.LabelFor(model => model.Change, htmlAttributes: new { @class = "control-label col-md-2" })*@
                            <div class="col-md-13">
                                @Html.EditorFor(model => model.MoAIW, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.MoAIW, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </td>
                    <td>
                        <div class="container-narrow">
                            <div class="col-md-13">
                                <input type="submit" value="Save" class="btn btn-small btn-primary" style="width:150px; height:35px;" />
                            </div>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <div class="container-narrow">
                            @*@Html.LabelFor(model => model.Offset_Distance, htmlAttributes: new { @class = "control-label col-md-2" })*@
                            <div class="col-md-13">
                                @Html.EditorFor(model => model.Specific_Gravity, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Specific_Gravity, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </td>
                    <td>
                        <div class="container-narrow">
                            @*@Html.LabelFor(model => model.Latitude, htmlAttributes: new { @class = "control-label col-md-2" })*@
                            <div class="col-md-13">
                                @Html.EditorFor(model => model.Apparent_Specific_Gravity, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Apparent_Specific_Gravity, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </td>
                    <td>

                        <div class="container-narrow">
                            @*@Html.LabelFor(model => model.Longitude, htmlAttributes: new { @class = "control-label col-md-2" })*@
                            <div class="col-md-13">
                                @Html.EditorFor(model => model.Water_Absorption_of_Aggregate, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Water_Absorption_of_Aggregate, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </td>
                    <td>
                        <div class="container-narrow">
                            @*@Html.LabelFor(model => model.Elevation, htmlAttributes: new { @class = "control-label col-md-2" })*@
                            <div class="col-md-13">
                                @*@Html.EditorFor(model => model.Elevation, new { htmlAttributes = new { @class = "form-control", placeholder = "Elevation", tabindex = 1 } })
                                    @Html.ValidationMessageFor(model => model.Elevation, "", new { @class = "text-danger" })*@
                            </div>
                        </div>
                    </td>
                    <td>
                        <div class="container-narrow">
                            <div class="col-md-13">
                                <input type="reset" class="btn btn-info" value="Clear" style="width:150px; height:35px;" />
                            </div>
                        </div>
                    </td>
                </tr>

            </tbody>
        </table>
    </div>
}


























@*

@model RCMD.Models.Determnation_Of_Specific_Gravity_And_Water_Absorption_Of_Fine

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Determnation_Of_Specific_Gravity_And_Water_Absorption_Of_Fine</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            @Html.LabelFor(model => model.Location_ID, "Location_ID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Location_ID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Location_ID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.WSASDT, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.WSASDT, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.WSASDT, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.WSSDAIA, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.WSSDAIA, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.WSSDAIA, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MoAIW, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MoAIW, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MoAIW, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Specific_Gravity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Specific_Gravity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Specific_Gravity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Apparent_Specific_Gravity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Apparent_Specific_Gravity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Apparent_Specific_Gravity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Water_Absorption_of_Aggregate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Water_Absorption_of_Aggregate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Water_Absorption_of_Aggregate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
*@